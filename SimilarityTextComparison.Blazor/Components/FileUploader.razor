@using ChatGPT_Splitter_Blazor_New.TextComparer.Services.Interfaces
@inject IStorageService StorageService

<div class="mb-3">
    <label for="fileInput" class="form-label">Carica file:</label>
    <InputFile id="fileInput" class="form-control" OnChange="HandleFileSelected" multiple />
</div>

<Loader IsLoading="isLoading" />
<AlertMessage Message="alertMessage" AlertType="alertType" />

@code
{
    private bool isLoading = false;
    private string alertMessage;
    private string alertType;

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        isLoading = true;
        alertMessage = string.Empty;

        StateHasChanged();

        try
        {
            foreach (var file in e.GetMultipleFiles())
            {
                using var stream = file.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024); // 10 MB limit
                using var reader = new StreamReader(stream);
                var content = await reader.ReadToEndAsync();

                await StorageService.SetItemAsync($"file_{file.Name}", content);
            }

            alertMessage = "File caricati con successo!";
            alertType = "info";
        }
        catch (Exception ex)
        {
            alertMessage = $"Errore durante il caricamento dei file: {ex.Message}";
            alertType = "danger";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}